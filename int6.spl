//int 6
alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNum S1;
sysCallNum = [physicalSP - 1];

if( sysCallNum == 9) then //exec
	alias arg1 S2;                               
	arg1 = [physicalSP - 3];

	alias currentPID S3;
	currentPID = (PTBR - 1024) / 8;
	alias fat_index S4;
	alias b_block S5;
	alias sys_index S6;
	alias currentPCB S7;
	currentPCB = READY_LIST + 32 * currentPID;

	alias count S8;
	alias j S9;
	j = 0;
	alias flag S10;
	flag = 0;
	count = 0;

	while(count < 64) do
		if(arg1 == [FAT + 8 * count ]) then
			fat_index = count ;
			flag = 1;
			break;
		endif;
		count = count + 1;
	endwhile;

	if(flag == 0) then
		[physicalSP - 2] = -1;  //file not found
		ireturn;
	endif;

	b_block = [FAT + 8 * fat_index + 2];
	load (1,b_block);

	count = 0;
	while(count < 3) do
		if([PTBR + 2*count + 1] == "01" || [PTBR + 2*count + 1] == "11") then
			[MEM_LIST + [PTBR + 2*count]] = [MEM_LIST + [PTBR + 2*count]] - 1;
		endif;
		if([PTBR + 2*count + 1] == "00" && [PTBR + 2*count] >= 448) then
			[DISK_LIST + [PTBR + 2*count]] = [DISK_LIST + [PTBR + 2*count]] - 1;
			store(6,20);//storing DF back to the disk
		endif;

		[PTBR + 2*count] = [SCRATCHPAD + count];
		[PTBR + 2*count + 1] = "00";
		count = count + 1;
	endwhile;

	[PTBR + 2*count + 1] = "01";	

	count = 0;
	while (count < 8) do   //closing all open instances of the file opened by the current process
		sys_index = [currentPCB + 15 + 2*count];

		if(sys_index == -1) then
			count = count + 1;
			continue;
		endif;

		[FILE_TABLE + sys_index*2 + 1] = [FILE_TABLE + sys_index*2 +1] - 1;
		if([FILE_TABLE + sys_index*2 + 1] == 0) then
			[FILE_TABLE + sys_index*2] = -1;
		endif;
		[currentPCB + 15 + 2*count] = -1;
		[currentPCB + 15 + 2*count + 1] = -1;
		count = count + 1;
	endwhile;

	SP = 3 * 512;
	physicalSP = [PTBR + 6] * 512;                 // physical address of the stack ;SP/512 = 3 
	[physicalSP] = 0;
	ireturn;
endif;

if(sysCallNum == 11) then    //getpid
	alias currentPID S2;
	currentPID = (PTBR - 1024)/8;
	if (currentPID < 0 || currentPID >=64) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	[physicalSP - 2] = currentPID;
	ireturn;
endif;

if (sysCallNum == 12) then    //getppid
	alias currentPID S2;
	currentPID = (PTBR - 1024)/8;
	alias currentPCB S3;
	currentPCB = READY_LIST + 32*currentPID;
	[physicalSP - 2] = [currentPCB + 31];
	ireturn;
endif;